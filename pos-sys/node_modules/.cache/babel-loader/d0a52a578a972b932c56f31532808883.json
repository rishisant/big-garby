{"ast":null,"code":"import { CHILD_STATE } from './useRouteCache';\nexport default function getFocusedRouteNameFromRoute(route) {\n  var _route$CHILD_STATE, _state$index;\n\n  // @ts-expect-error: this isn't in type definitions coz we want this private\n  var state = (_route$CHILD_STATE = route[CHILD_STATE]) !== null && _route$CHILD_STATE !== void 0 ? _route$CHILD_STATE : route.state;\n  var params = route.params;\n  var routeName = state ?\n  // Get the currently active route name in the nested navigator\n  state.routes[\n  // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n  // The type property will only exist for rehydrated state and not for state from deep link\n  (_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : typeof state.type === 'string' && state.type !== 'stack' ? 0 : state.routes.length - 1].name :\n  // If state doesn't exist, we need to default to `screen` param if available\n  typeof (params === null || params === void 0 ? void 0 : params.screen) === 'string' ? params.screen : undefined;\n  return routeName;\n}","map":null,"metadata":{},"sourceType":"module"}