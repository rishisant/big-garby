{"ast":null,"code":"import _slicedToArray from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useNavigation from './useNavigation';\n\n/**\n * Hook to get a value from the current navigation state using a selector.\n *\n * @param selector Selector function to get a value from the state.\n */\nexport default function useNavigationState(selector) {\n  var navigation = useNavigation(); // We don't care about the state value, we run the selector again at the end\n  // The state is only to make sure that there's a re-render when we have a new value\n  var _React$useState = React.useState(function () {\n      return selector(navigation.getState());\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    setResult = _React$useState2[1]; // We store the selector in a ref to avoid re-subscribing listeners every render\n  var selectorRef = React.useRef(selector);\n  React.useEffect(function () {\n    selectorRef.current = selector;\n  });\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener('state', function (e) {\n      setResult(selectorRef.current(e.data.state));\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return selector(navigation.getState());\n}","map":null,"metadata":{},"sourceType":"module"}