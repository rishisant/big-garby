{"ast":null,"code":"import _toConsumableArray from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/santanamu/Desktop/pos-p3/pos-sys/src/CreateOrder.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from 'react'; //import './BaseStyle.css';\nimport './ManagerStyle.css';\nimport './TableStyle.css';\nimport { useNavigate } from 'react-router-dom';\nimport { raise_admin_bar } from './HomeFunctions';\nimport { useRowSelect, useTable } from 'react-table';\nfunction CreateOrder() {\n  var _this = this;\n  var navigate = useNavigate();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    product = _useState2[0],\n    setProduct = _useState2[1];\n  var t = \"\";\n  useEffect(function () {\n    getProduct();\n  }, []);\n  var count = 0;\n  var test;\n  var INITIAL_STATE = [];\n  var _useState3 = useState(INITIAL_STATE),\n    _useState4 = _slicedToArray(_useState3, 2),\n    products = _useState4[0],\n    setProducts = _useState4[1];\n  function read_products() {\n    //console.log(\"getting product in array\");\n    var pstring = document.getElementById(\"test_query_string\").innerHTML;\n    var d = pstring.split(\" | \");\n    /// console.log(\"Description \" + d);\n  }\n\n  function read_price() {\n    //console.log(\"getting price in array\");\n    var pstring1 = document.getElementById(\"test_query_string1\").innerHTML;\n    var p = pstring1.split(\" | \");\n    // console.log(\"Price: \"+ p);\n  }\n\n  var getProduct = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"started getproduct\");\n              _context.next = 3;\n              return fetch('http://localhost:3001').then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                //console.log(\"About to get info from query\");\n                test = res[0].description;\n                var newProducts = _toConsumableArray(products);\n                for (var i = 0; i < res.length; i++) {\n                  newProducts.push({\n                    id: i,\n                    name: res[i].description,\n                    price: res[i].price\n                  });\n                }\n                setProducts(newProducts);\n                // for (t in res) { \n                //     if(count == 0){\n                //         document.getElementById(\"test_query_string\").innerHTML += res[t].description + \" | \";\n                //         document.getElementById(\"test_query_string1\").innerHTML += res[t].price + \" | \";\n                //         d.push(res[t].description);\n                //         p.push(res[t].price);\n                //     }         \n                // }\n                // for (var i = 0; i < d.length; i++) {  \n                //     INITIAL_STATE.push({id: i, name: d[i], price: p[i]});\n                // }  \n                count++;\n                // if (count  == 1){   \n                //     //console.log(\"if statement for creation of arrays\");\n                //     read_products();  \n                //     read_price(); \n                //     for (var i = 0; i < d.length; i++) {  \n                //         INITIAL_STATE.push({id1: i, name: d[i], price: p[i]}); \n                //     }\n                //     //console.log(\"Initial State: \" + INITIAL_STATE);\n                // }\n                // console.log(p);\n                // console.log(d);\n                console.log(\"End of getProduct\");\n              });\n            case 3:\n              console.log(\"x\");\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function getProduct(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderProducts = function renderProducts() {\n    console.log(\"render products\");\n    return products.map(function (_ref2) {\n      var id1 = _ref2.id1,\n        name = _ref2.name,\n        price = _ref2.price;\n      {\n        console.log(\"mapped\");\n      }\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, price));\n    });\n  };\n  console.log(\"starting html\");\n  getProduct(t);\n  var _React$useState = React.useState(INITIAL_STATE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"test_query_string\",\n    style: {\n      visibility: 'hidden',\n      fontSize: '0.1px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"test_query_string1\",\n    style: {\n      visibility: 'hidden',\n      fontSize: '0.1px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table_s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Price\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, renderProducts()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homebutton\",\n    id: \"add_product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Add to Order\"));\n}\n;\nexport default CreateOrder;\n\n// import React, {useState, useEffect} from 'react';//import './BaseStyle.css';\n// import './ManagerStyle.css';\n// import './TableStyle.css';\n// import {useNavigate} from 'react-router-dom';\n// import {raise_admin_bar} from './HomeFunctions';\n\n// import { useRowSelect, useTable } from 'react-table';\n// var test = \"Test Query1\";\n// let query_string = \"\";\n// var d = [\"pizza\", \"burger\", \"fries\", \"soda\", \"ice cream\", \"salad\"];\n// var p = [8, 9, 10, 11, 12, 13];\n// var orders = [];\n// var row_id = 0;\n// var string  = \"p\";\n// function ViewOrders (){\n//     const navigate = useNavigate();\n//     const [product, setProduct] = useState(false);\n//     var t = \"\";\n//     useEffect(() => {\n//         getProduct();\n//     }, []); \n//     var count = 0;\n//     var INITIAL_STATE = [\n//         {id: 1, name: \"Pizza\" , price: 10},\n//         {id: 2, name: \"Burger\", price: 5},  \n//         {id: 3, name: \"Fries\", price: 2},\n//         {id: 4, name: \"Soda\", price: 1}, \n//         {id: 5, name: \"Ice Cream\", price: 3},\n//         {id: 6, name: \"Salad\", price: 4},  \n//     ];\n//     const [users, setUsers] = useState(INITIAL_STATE)\n//     function read_products(){\n//         //console.log(\"getting product in array\");\n//         var pstring = document.getElementById(\"test_query_string\").innerHTML;\n//         d = pstring.split(\" | \");\n//        /// console.log(\"Description \" + d);\n//     }\n//     function read_price(){\n\n//         //console.log(\"getting price in array\");\n//         var pstring1 = document.getElementById(\"test_query_string1\").innerHTML;\n//         p = pstring1.split(\" | \");   \n//        // console.log(\"Price: \"+ p);\n//     }\n//     const getProduct = (t)=> {\n//         console.log(\"started getproduct\");  \n//         fetch('http://localhost:3001')\n//         .then(res => res.json())\n//         .then(res => {   \n//             //console.log(\"About to get info from query\");\n//             test = res[0].description;\n//             for (t in res) { \n//                 if(count == 0){\n//                     document.getElementById(\"test_query_string\").innerHTML += res[t].description + \" | \";\n//                     document.getElementById(\"test_query_string1\").innerHTML += res[t].price + \" | \";\n//                     d.push(res[t].description);\n//                     p.push(res[t].price);\n//                 }         \n//             }\n//             // for (var i = 0; i < d.length; i++) {  \n//             //     INITIAL_STATE.push({id: i, name: d[i], price: p[i]});\n//             // }  \n//             count ++;\n//             // if (count  == 1){   \n//             //     //console.log(\"if statement for creation of arrays\");\n//             //     read_products();  \n//             //     read_price(); \n//             //     for (var i = 0; i < d.length; i++) {  \n//             //         INITIAL_STATE.push({id1: i, name: d[i], price: p[i]}); \n//             //     }\n//             //     //console.log(\"Initial State: \" + INITIAL_STATE);\n//             // }\n//             // console.log(p);\n//             // console.log(d);\n//             console.log(\"End of getProduct\");\n\n//         })\n//     }\n\n//     function checkFlag() { \n//         if(p.length < 1 || d.length < 1) {\n//             console.log(\"wait\");\n//            window.setTimeout(checkFlag, 100); /* this checks the flag every 100 milliseconds*/\n//         } else { \n//           return;\n//         }\n//     }  \n\n//     const renderProducts = () =>{\n//         console.log(\"render products\");\n//         ////var wait = await getProduct();\n//         //setTimeout(() => console.log(JSON.stringify(p)), 6000);\n//         //checkFlag();\n//         //getProduct();\n//         //console.log(\"waited\");\n//         // console.log(\"price: \" + p);  \n//         // console.log(\"description: \" + d);\n//         return users.map(({ id1, name, price }) => { \n//         {console.log(\"mapped\")}   \n\n//         return <tr key={id1} >  \n//         <td >{name}</td>  \n//         <td >{price}</td>   \n//         {/* {console.log(\"rendered products\")}   \n//         {console.log(\"row_id: \" + row_id)} \n//         {row_id++}  */}\n//         </tr>    \n\n//         }) \n//     } \n//     console.log(\"starting html\");\n//     getProduct(t);\n//     const[state, setState] = React.useState(INITIAL_STATE);\n//     return (\n//         <div>\n//         {/* {console.log(\"Website creation begun\")} */}\n//         <div style={{ margin: '50px' }}>\n//         </div>\n//         {/* The strings that we pull for query functions */}\n//         <div id=\"test_query_string\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n//         <div id=\"test_query_string1\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n//         <div>\n//         <table className=\"table_s\" > \n//             <thead>\n//                 <tr > \n//                 <th>Product</th>  \n//                 <th>Price</th> \n//                 </tr>  \n//             </thead>    \n//             <tbody> \n//             {/* {state.map((item) => ( \n//                 <tr key={item.id}>\n//                     {Object.values(item).map((val) => (\n//                         <td>{val}</td>\n//                     ))}\n//                 </tr>\n//             ))} */}\n\n//             {renderProducts()}    \n//             </tbody>  \n//         </table>\n//         </div>  \n\n//         <div className=\"homebutton\" id=\"add_product\"  >Add to Order</div>\n\n//         </div>  \n//     );\n\n// };\n// export default ViewOrders;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","raise_admin_bar","useRowSelect","useTable","CreateOrder","navigate","product","setProduct","t","getProduct","count","test","INITIAL_STATE","products","setProducts","read_products","pstring","document","getElementById","innerHTML","d","split","read_price","pstring1","p","console","log","fetch","then","res","json","description","newProducts","i","length","push","id","name","price","renderProducts","map","id1","state","setState","margin","visibility","fontSize"],"sources":["/Users/santanamu/Desktop/pos-p3/pos-sys/src/CreateOrder.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';//import './BaseStyle.css';\nimport './ManagerStyle.css';\nimport './TableStyle.css';\nimport {useNavigate} from 'react-router-dom';\nimport {raise_admin_bar} from './HomeFunctions';\n\nimport { useRowSelect, useTable } from 'react-table';\n\nfunction CreateOrder (){\n    const navigate = useNavigate();\n    const [product, setProduct] = useState(false);\n    var t = \"\";\n    useEffect(() => {\n        getProduct();\n    }, []); \n    var count = 0;\n    let test;\n    var INITIAL_STATE = [];\n    const [products, setProducts] = useState(INITIAL_STATE)\n    function read_products(){\n        //console.log(\"getting product in array\");\n        var pstring = document.getElementById(\"test_query_string\").innerHTML;\n        var d = pstring.split(\" | \");\n       /// console.log(\"Description \" + d);\n    }\n    function read_price(){\n\n        //console.log(\"getting price in array\");\n        var pstring1 = document.getElementById(\"test_query_string1\").innerHTML;\n        var p = pstring1.split(\" | \");   \n       // console.log(\"Price: \"+ p);\n    }\n    const getProduct = async (t)=> {\n        console.log(\"started getproduct\");  \n        await fetch('http://localhost:3001')\n        .then(res => res.json())\n        .then(res => {   \n            //console.log(\"About to get info from query\");\n            test = res[0].description;\n            let newProducts = [ ...products];\n            for (var i = 0; i < res.length; i++){\n                newProducts.push({id: i, name: res[i].description, price: res[i].price});\n            }\n            setProducts(newProducts);\n            // for (t in res) { \n            //     if(count == 0){\n            //         document.getElementById(\"test_query_string\").innerHTML += res[t].description + \" | \";\n            //         document.getElementById(\"test_query_string1\").innerHTML += res[t].price + \" | \";\n            //         d.push(res[t].description);\n            //         p.push(res[t].price);\n            //     }         \n            // }\n            // for (var i = 0; i < d.length; i++) {  \n            //     INITIAL_STATE.push({id: i, name: d[i], price: p[i]});\n            // }  \n            count ++;\n            // if (count  == 1){   \n            //     //console.log(\"if statement for creation of arrays\");\n            //     read_products();  \n            //     read_price(); \n            //     for (var i = 0; i < d.length; i++) {  \n            //         INITIAL_STATE.push({id1: i, name: d[i], price: p[i]}); \n            //     }\n            //     //console.log(\"Initial State: \" + INITIAL_STATE);\n            // }\n            // console.log(p);\n            // console.log(d);\n            console.log(\"End of getProduct\");\n\n        })\n        console.log(\"x\")\n\n    }\n\n\n    const renderProducts = () =>{\n        console.log(\"render products\");\n        \n        return products.map(({ id1, name, price }) => { \n        {console.log(\"mapped\")}   \n\n        return <tr key={id1} >  \n        <td >{name}</td>  \n        <td >{price}</td>   \n     \n        </tr>    \n\n\n        }) \n    } \n    console.log(\"starting html\");\n    getProduct(t);\n    const[state, setState] = React.useState(INITIAL_STATE);\n    return (\n        <div>\n        {/* {console.log(\"Website creation begun\")} */}\n        <div style={{ margin: '50px' }}>\n        </div>\n        {/* The strings that we pull for query functions */}\n        <div id=\"test_query_string\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n        <div id=\"test_query_string1\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n        <div>\n        <table className=\"table_s\" > \n            <thead>\n                <tr > \n                <th>Product</th>  \n                <th>Price</th> \n                </tr>  \n            </thead>    \n            <tbody> \n            \n\n            {renderProducts()}    \n            </tbody>  \n        </table>\n        </div>  \n\n        <div className=\"homebutton\" id=\"add_product\"  >Add to Order</div>\n\n        </div>  \n    );\n\n};\nexport default CreateOrder;\n\n// import React, {useState, useEffect} from 'react';//import './BaseStyle.css';\n// import './ManagerStyle.css';\n// import './TableStyle.css';\n// import {useNavigate} from 'react-router-dom';\n// import {raise_admin_bar} from './HomeFunctions';\n\n// import { useRowSelect, useTable } from 'react-table';\n// var test = \"Test Query1\";\n// let query_string = \"\";\n// var d = [\"pizza\", \"burger\", \"fries\", \"soda\", \"ice cream\", \"salad\"];\n// var p = [8, 9, 10, 11, 12, 13];\n// var orders = [];\n// var row_id = 0;\n// var string  = \"p\";\n// function ViewOrders (){\n//     const navigate = useNavigate();\n//     const [product, setProduct] = useState(false);\n//     var t = \"\";\n//     useEffect(() => {\n//         getProduct();\n//     }, []); \n//     var count = 0;\n//     var INITIAL_STATE = [\n//         {id: 1, name: \"Pizza\" , price: 10},\n//         {id: 2, name: \"Burger\", price: 5},  \n//         {id: 3, name: \"Fries\", price: 2},\n//         {id: 4, name: \"Soda\", price: 1}, \n//         {id: 5, name: \"Ice Cream\", price: 3},\n//         {id: 6, name: \"Salad\", price: 4},  \n//     ];\n//     const [users, setUsers] = useState(INITIAL_STATE)\n//     function read_products(){\n//         //console.log(\"getting product in array\");\n//         var pstring = document.getElementById(\"test_query_string\").innerHTML;\n//         d = pstring.split(\" | \");\n//        /// console.log(\"Description \" + d);\n//     }\n//     function read_price(){\n \n//         //console.log(\"getting price in array\");\n//         var pstring1 = document.getElementById(\"test_query_string1\").innerHTML;\n//         p = pstring1.split(\" | \");   \n//        // console.log(\"Price: \"+ p);\n//     }\n//     const getProduct = (t)=> {\n//         console.log(\"started getproduct\");  \n//         fetch('http://localhost:3001')\n//         .then(res => res.json())\n//         .then(res => {   \n//             //console.log(\"About to get info from query\");\n//             test = res[0].description;\n//             for (t in res) { \n//                 if(count == 0){\n//                     document.getElementById(\"test_query_string\").innerHTML += res[t].description + \" | \";\n//                     document.getElementById(\"test_query_string1\").innerHTML += res[t].price + \" | \";\n//                     d.push(res[t].description);\n//                     p.push(res[t].price);\n//                 }         \n//             }\n//             // for (var i = 0; i < d.length; i++) {  \n//             //     INITIAL_STATE.push({id: i, name: d[i], price: p[i]});\n//             // }  \n//             count ++;\n//             // if (count  == 1){   \n//             //     //console.log(\"if statement for creation of arrays\");\n//             //     read_products();  \n//             //     read_price(); \n//             //     for (var i = 0; i < d.length; i++) {  \n//             //         INITIAL_STATE.push({id1: i, name: d[i], price: p[i]}); \n//             //     }\n//             //     //console.log(\"Initial State: \" + INITIAL_STATE);\n//             // }\n//             // console.log(p);\n//             // console.log(d);\n//             console.log(\"End of getProduct\");\n            \n//         })\n//     }\n    \n    \n//     function checkFlag() { \n//         if(p.length < 1 || d.length < 1) {\n//             console.log(\"wait\");\n//            window.setTimeout(checkFlag, 100); /* this checks the flag every 100 milliseconds*/\n//         } else { \n//           return;\n//         }\n//     }  \n    \n \n//     const renderProducts = () =>{\n//         console.log(\"render products\");\n//         ////var wait = await getProduct();\n//         //setTimeout(() => console.log(JSON.stringify(p)), 6000);\n//         //checkFlag();\n//         //getProduct();\n//         //console.log(\"waited\");\n//         // console.log(\"price: \" + p);  \n//         // console.log(\"description: \" + d);\n//         return users.map(({ id1, name, price }) => { \n//         {console.log(\"mapped\")}   \n             \n//         return <tr key={id1} >  \n//         <td >{name}</td>  \n//         <td >{price}</td>   \n//         {/* {console.log(\"rendered products\")}   \n//         {console.log(\"row_id: \" + row_id)} \n//         {row_id++}  */}\n//         </tr>    \n        \n           \n//         }) \n//     } \n//     console.log(\"starting html\");\n//     getProduct(t);\n//     const[state, setState] = React.useState(INITIAL_STATE);\n//     return (\n//         <div>\n//         {/* {console.log(\"Website creation begun\")} */}\n//         <div style={{ margin: '50px' }}>\n//         </div>\n//         {/* The strings that we pull for query functions */}\n//         <div id=\"test_query_string\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n//         <div id=\"test_query_string1\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n//         <div>\n//         <table className=\"table_s\" > \n//             <thead>\n//                 <tr > \n//                 <th>Product</th>  \n//                 <th>Price</th> \n//                 </tr>  \n//             </thead>    \n//             <tbody> \n//             {/* {state.map((item) => ( \n//                 <tr key={item.id}>\n//                     {Object.values(item).map((val) => (\n//                         <td>{val}</td>\n//                     ))}\n//                 </tr>\n//             ))} */}\n    \n//             {renderProducts()}    \n//             </tbody>  \n//         </table>\n//         </div>  \n        \n//         <div className=\"homebutton\" id=\"add_product\"  >Add to Order</div>\n\n//         </div>  \n//     );\n      \n// };\n// export default ViewOrders;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}