[{"C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\Customer.js":"1","C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\EnterOrderS.js":"2","C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\ViewOrders.js":"3"},{"size":8774,"mtime":1670123879380,"results":"4","hashOfConfig":"5"},{"size":8614,"mtime":1670123899287,"results":"6","hashOfConfig":"5"},{"size":7632,"mtime":1670188582475,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1y9zesm",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\Customer.js",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],[],"C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\EnterOrderS.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],[],"import {useNavigate} from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport './BaseStyle.css';\n// import {raise_admin_bar} from './HomeFunctions';\nimport {raise_admin_bar} from './HomeFunctions';\nimport Dropdown from 'react-dropdown';\nimport {products, prices, ingredients, print_All_Vals} from './Home';\nimport {initValsTiny} from './Home';\nvar total_price = 0.0;\nvar completedOrder = [];\nfunction EnterOrderS ({par}){\n    var id_order = 0;\n    \n    var to_add = \"howdy\";\n    const navigate = useNavigate();\n    const [x, setX] = useState(false);\n    // note to matt: modify this options -> with the items in the database just as you did with the table\n    const dd_options = [\n        'Steamed Juntunen', 'Spicy Santhanam', 'Fried Egholm', 'Baked Rehmat'\n    ];\n    \n    var t = \"\";\n    var mounted = false;\n    useEffect(() => {\n        if (mounted == false){\n            getProduct();\n            initValsTiny();\n        }\n        mounted = true;\n    \n    }, []); \n    var count = 0;\n    let test;\n    var current_order = [];\n    var INITIAL_STATE = [];\n    const [order, setOrder] = useState(current_order);\n    const [products, setProducts] = useState(INITIAL_STATE)\n    \n    const getProduct = async (t)=> {\n        console.log(\"started getproduct\");  \n        fetch('http://localhost:3001/products')\n        .then(res => res.json())\n        .then(res => {   \n            //console.log(\"About to get info from query\");\n                let newProducts = [ ...products];\n                for (var i = 0; i < res.length; i++){\n                    newProducts.push({id: i, name: res[i].description, price: \"$\" + String(res[i].price)});\n                }\n                setProducts(newProducts);\n            \n            //console.log(\"End of getProduct\");\n\n        })\n        //console.log(\"x\")\n\n    }\n\n    const add_to_order = () => {\n        \n        var desc = document.getElementById(\"selected_item\").innerHTML;\n        var item_price = (document.getElementById(\"selected_price\").innerHTML);\n        var quant = parseFloat(document.getElementById(\"quantfield\").value);\n        if (quant == 0){\n            alert(\"Please enter a quantity.\");\n            return;\n        }\n        else if (quant < 0){\n            alert(\"Please enter a positive quantity.\");\n            return;\n        }\n        else if (isNaN(quant)){\n            alert(\"Please enter a valid quantity.\");\n            return;\n        }\n        let new_order = [ ...order];\n        //get just the number from the price\n        console.log(\"item_price1: \" + item_price);\n        item_price = parseFloat(item_price.substring(1));\n        console.log(\"item_price: \" + item_price);\n        new_order.push({id: id_order, name: desc, quantity: quant, price: (parseFloat(item_price)*parseFloat(quant)).toFixed(2)});\n        setOrder(new_order);\n        id_order++;\n        total_price = parseFloat(total_price) + parseFloat(quant * (item_price));\n        total_price = total_price.toFixed(2);\n        document.getElementById(\"total_price_div\").innerHTML = \"$\" + String(total_price);\n        \n        completedOrder.push({name: desc, quantity: quant, price: (parseFloat(item_price)*parseFloat(quant)).toFixed(2)});\n        \n    }\n\n    const queryOrder = () => {\n        fetch ('http://localhost:3001/orders', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(completedOrder)\n        })\n        .then(res => {\n            return res.text();\n        })\n        .then(data => {\n            //alert(data);\n            getProduct();\n        });\n        //clear current order table\n        let new_order = [ ...order];\n        new_order = [];\n        setOrder(new_order);\n        total_price = 0.00;\n        document.getElementById(\"total_price_div\").innerHTML = \"$\" + \"0.00\";\n        completedOrder = [];\n\n    }\n\n    const onClickAddItem = (name, price) => {\n        // event.preventDefault();\n        \n        var div = document.getElementById(\"selected_item\")\n        div.innerHTML = name;\n        var div2 = document.getElementById(\"selected_price\")\n        div2.innerHTML = String(price);\n        //clear the quantity field\n        \n\n        //console.log(name, price)\n    }\n\n    const renderOrders = () =>{\n\n        \n        return order.map(({ id, name, quantity, price }) => { \n        \n\n        return <tr key={id}>  \n        <td >{name}</td>  \n        <td>{quantity}</td>\n        <td >${price}</td>   \n     \n        </tr>    \n\n\n        }) \n    } \n\n    const renderProducts = () =>{\n        \n        \n        return products.map(({ id, name, price }) => { \n        \n\n        return <tr key={id} onClick={(event) => {onClickAddItem(name, price)}}>  \n        <td >{name}</td>  \n        <td >{price}</td>   \n     \n        </tr>    \n\n\n        }) \n    } \n\n    const containerStyle = {\n        // center both tables and make them display next to each other (flex row)\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginTop: '20px',\n        marginBottom: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '100%',\n        height: '100%',\n    };\n\n    //console.log(\"starting html\");\n    // getProduct(t);\n    const[state, setState] = React.useState(INITIAL_STATE);\n    return (\n        <div>\n        <img id=\"mainlogo3\" style={{cursor: 'pointer'}} src={require('./components/img/hss_transparent.png')} onClick={()=>navigate('/Server')}  alt=\"Logo\"></img>\n        <div className=\"textbut1\">\n            Enter any orders here that you would like to send to the kitchen. Note that each time you press send, a new order will be sent.\n                \n                Click on the logo to return back to the Server menu page.\n        </div>\n        {/* {console.log(\"Website creation begun\")} */}\n        <div style={{ margin: '50px' }}>\n        </div>\n        {/* The strings that we pull for query functions */}\n        <div id=\"test_query_string\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n        <div id=\"test_query_string1\" style={{visibility: 'hidden', fontSize: '0.1px' }}></div>\n        <div className=\"tablecontainer\" style={containerStyle}>\n                <div id=\"tablediv\">\n                    <table className=\"table_s\" > \n                        <thead>\n                            <tr>\n                            <th colSpan=\"2\">Menu Items</th>\n                            </tr>\n                            <tr > \n                            <th>Product</th>  \n                            <th>Price</th> \n                            </tr>  \n                        </thead>    \n                        <tbody> \n                        \n\n                        {renderProducts()}    \n                        </tbody>  \n                    </table>\n                </div>\n\n                <div id=\"tablediv\">\n                    <table className=\"table_s\" > \n                        <thead>\n                            <tr>\n                            <th colSpan=\"3\">Current Order</th>\n                            </tr>\n                            <tr > \n                            <th>Product</th>  \n                            <th>Quantity</th> \n                            <th> Price </th>\n                            </tr>  \n                        </thead>    \n                        <tbody> \n                        {renderOrders()}\n                        </tbody>  \n                        <td colSpan=\"2\" style={{fontWeight: 'bold', textAlign: 'center'}}>Total Price</td>\n                        <td id=\"total_price_div\">$0.00</td>\n                    </table>\n                </div>\n\n                <div className=\"addtoorder\">\n                    {/* <Dropdown className=\"dropdown\" options={dd_options} placeholder=\"Select an option\" /> */}\n                    <text id=\"order\" className=\"order\"> Selected Item: </text>\n                    <div id=\"selected_item\" className=\"order\">{}</div>\n                    <div id=\"selected_price\" className=\"order\">{}</div>\n                    <input id=\"quantfield\" placeholder=\"Quantity\"></input>\n                    <button className=\"addtoorderbutton\" style={{fontSize: '15px'}} onClick={add_to_order}>Add Item to Order</button>\n                    <br></br><button className=\"addtoorderbutton\" style={{fontSize: '15px'}} onClick={queryOrder}>Send Order</button>\n                </div> \n\n                \n        </div>\n\n        {/* <div className=\"homebutton\" id=\"add_product\"  >Add to Order</div> */}\n\n        </div>  \n    );\n\n};\nexport default EnterOrderS;",[],"C:\\Users\\matth\\Documents\\TAMU\\Fall_2022\\pos-system\\pos-sys\\src\\ViewOrders.js",["57","58","59","60","61","62","63","64","65","66","67","68"],[],{"ruleId":"69","severity":1,"message":"70","line":5,"column":9,"nodeType":"71","messageId":"72","endLine":5,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":7,"column":9,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":7,"column":19,"nodeType":"71","messageId":"72","endLine":7,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":7,"column":27,"nodeType":"71","messageId":"72","endLine":7,"endColumn":38},{"ruleId":"69","severity":1,"message":"77","line":7,"column":40,"nodeType":"71","messageId":"72","endLine":7,"endColumn":54},{"ruleId":"69","severity":1,"message":"78","line":14,"column":9,"nodeType":"71","messageId":"72","endLine":14,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":16,"column":12,"nodeType":"71","messageId":"72","endLine":16,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":16,"column":15,"nodeType":"71","messageId":"72","endLine":16,"endColumn":19},{"ruleId":"69","severity":1,"message":"81","line":18,"column":11,"nodeType":"71","messageId":"72","endLine":18,"endColumn":21},{"ruleId":"69","severity":1,"message":"82","line":22,"column":9,"nodeType":"71","messageId":"72","endLine":22,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":25,"column":21,"nodeType":"85","messageId":"86","endLine":25,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":29,"column":19,"nodeType":"89","endLine":29,"endColumn":23},{"ruleId":"69","severity":1,"message":"90","line":32,"column":9,"nodeType":"71","messageId":"72","endLine":32,"endColumn":14},{"ruleId":"69","severity":1,"message":"91","line":33,"column":9,"nodeType":"71","messageId":"72","endLine":33,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":63,"column":19,"nodeType":"85","messageId":"86","endLine":63,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":111,"column":68,"nodeType":"85","messageId":"94","endLine":111,"endColumn":69},{"ruleId":"69","severity":1,"message":"95","line":177,"column":11,"nodeType":"71","messageId":"72","endLine":177,"endColumn":16},{"ruleId":"69","severity":1,"message":"96","line":177,"column":18,"nodeType":"71","messageId":"72","endLine":177,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":5,"column":9,"nodeType":"71","messageId":"72","endLine":5,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":7,"column":9,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":7,"column":19,"nodeType":"71","messageId":"72","endLine":7,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":7,"column":27,"nodeType":"71","messageId":"72","endLine":7,"endColumn":38},{"ruleId":"69","severity":1,"message":"77","line":7,"column":40,"nodeType":"71","messageId":"72","endLine":7,"endColumn":54},{"ruleId":"69","severity":1,"message":"78","line":14,"column":9,"nodeType":"71","messageId":"72","endLine":14,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":16,"column":12,"nodeType":"71","messageId":"72","endLine":16,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":16,"column":15,"nodeType":"71","messageId":"72","endLine":16,"endColumn":19},{"ruleId":"69","severity":1,"message":"81","line":18,"column":11,"nodeType":"71","messageId":"72","endLine":18,"endColumn":21},{"ruleId":"69","severity":1,"message":"82","line":22,"column":9,"nodeType":"71","messageId":"72","endLine":22,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":25,"column":21,"nodeType":"85","messageId":"86","endLine":25,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":29,"column":19,"nodeType":"89","endLine":29,"endColumn":23},{"ruleId":"69","severity":1,"message":"90","line":32,"column":9,"nodeType":"71","messageId":"72","endLine":32,"endColumn":14},{"ruleId":"69","severity":1,"message":"91","line":33,"column":9,"nodeType":"71","messageId":"72","endLine":33,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":63,"column":19,"nodeType":"85","messageId":"86","endLine":63,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":111,"column":68,"nodeType":"85","messageId":"94","endLine":111,"endColumn":69},{"ruleId":"69","severity":1,"message":"95","line":177,"column":11,"nodeType":"71","messageId":"72","endLine":177,"endColumn":16},{"ruleId":"69","severity":1,"message":"96","line":177,"column":18,"nodeType":"71","messageId":"72","endLine":177,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":3,"column":9,"nodeType":"71","messageId":"72","endLine":3,"endColumn":24},{"ruleId":"69","severity":1,"message":"77","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":24},{"ruleId":"69","severity":1,"message":"74","line":5,"column":26,"nodeType":"71","messageId":"72","endLine":5,"endColumn":34},{"ruleId":"69","severity":1,"message":"76","line":5,"column":36,"nodeType":"71","messageId":"72","endLine":5,"endColumn":47},{"ruleId":"69","severity":1,"message":"75","line":5,"column":49,"nodeType":"71","messageId":"72","endLine":5,"endColumn":55},{"ruleId":"83","severity":1,"message":"84","line":14,"column":21,"nodeType":"85","messageId":"86","endLine":14,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":19,"column":19,"nodeType":"89","endLine":19,"endColumn":23},{"ruleId":"69","severity":1,"message":"97","line":57,"column":11,"nodeType":"71","messageId":"72","endLine":57,"endColumn":21},{"ruleId":"69","severity":1,"message":"98","line":91,"column":11,"nodeType":"71","messageId":"72","endLine":91,"endColumn":24},{"ruleId":"69","severity":1,"message":"99","line":122,"column":11,"nodeType":"71","messageId":"72","endLine":122,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":128,"column":46,"nodeType":"85","messageId":"86","endLine":128,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":136,"column":18,"nodeType":"71","messageId":"102","endLine":136,"endColumn":19},"no-unused-vars","'raise_admin_bar' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'products' is defined but never used.","'prices' is defined but never used.","'ingredients' is defined but never used.","'print_All_Vals' is defined but never used.","'to_add' is assigned a value but never used.","'x' is assigned a value but never used.","'setX' is assigned a value but never used.","'dd_options' is assigned a value but never used.","'t' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'count' is assigned a value but never used.","'test' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'getProduct' is assigned a value but never used.","'checkboxStyle' is assigned a value but never used.","'pairProduct' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared"]